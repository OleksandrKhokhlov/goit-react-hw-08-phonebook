{"version":3,"file":"static/js/236.4dab6c19.chunk.js","mappings":"sQAGaA,EAAaC,EAAAA,EAAAA,MAAH,0MAWVC,EAAYD,EAAAA,EAAAA,OAAH,2CAITE,GAAWF,EAAAA,EAAAA,GAAOG,EAAAA,GAAPH,CAAH,sC,kICTRI,EAAe,WAC1B,IAAMC,GAAWC,EAAAA,EAAAA,MAOjB,OACE,SAAC,KAAD,CACEC,cAAe,CACbC,KAAM,GACNC,MAAO,GACPC,SAAU,IAEZC,SAbiB,SAAC,EAA2BC,GAAa,IAAtCJ,EAAqC,EAArCA,KAAMC,EAA+B,EAA/BA,MAAOC,EAAwB,EAAxBA,SACnCG,QAAQC,IAAI,CAAEN,KAAAA,EAAMC,MAAAA,EAAOC,SAAAA,IAC3BL,GAASU,EAAAA,EAAAA,IAAS,CAAEP,KAAAA,EAAMC,MAAAA,EAAOC,SAAAA,KACjCE,EAAQI,WACT,EAGC,UAQE,UAAC,KAAD,YACE,UAAC,KAAD,CAAYC,QAAQ,OAApB,UAA2B,aAEzB,SAAC,KAAD,CAAOC,GAAG,OAAOC,KAAK,OAAOX,KAAK,aAEpC,SAAC,KAAD,CAAUA,KAAK,OAAOY,UAAU,UAEhC,UAAC,KAAD,CAAYH,QAAQ,QAApB,UAA4B,SAE1B,SAAC,KAAD,CAAOC,GAAG,QAAQC,KAAK,MAAMX,KAAK,cAEpC,SAAC,KAAD,CAAUA,KAAK,QAAQY,UAAU,UAEjC,UAAC,KAAD,CAAYH,QAAQ,WAApB,UAA+B,YAE7B,SAAC,KAAD,CAAOC,GAAG,WAAWC,KAAK,MAAMX,KAAK,iBAEvC,SAAC,KAAD,CAAUA,KAAK,WAAWY,UAAU,UAEpC,SAACC,EAAA,EAAD,CAAQC,QAAQ,YAAYH,KAAK,SAAjC,SAA0C,iBAMjD,ECjDc,SAASI,IACtB,OAAO,SAACnB,EAAD,GACR,C","sources":["components/ContactForm/ContactForm.styled .js","components/RegisterForm/RegisterForm.jsx","pages/Register.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { ErrorMessage } from 'formik';\n\nexport const EntryField = styled.label`\n  width: fit-content;\n  margin-bottom: 10px;\n  display: flex;\n  gap: 5px;\n  flex-wrap: wrap;\n  flex-direction: column;\n  align-content: space-around;\n  text-align: left;\n`;\n\nexport const AddButton = styled.button`\n  margin: 0 auto;\n`;\n\nexport const ErrorMsg = styled(ErrorMessage)`\n  color: red;\n`;\n","import { Field, Form, Formik } from 'formik';\nimport { Button } from '@mui/material';\nimport { useDispatch } from 'react-redux';\nimport { register } from 'redux/auth/operations';\nimport {\n  EntryField,\n  ErrorMsg,\n} from 'components/ContactForm/ContactForm.styled ';\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n  const handleSubmit = ({ name, email, password }, actions) => {\n    console.log({ name, email, password });\n    dispatch(register({ name, email, password }));\n    actions.resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={{\n        name: '',\n        email: '',\n        password: '',\n      }}\n      onSubmit={handleSubmit}\n    >\n      <Form>\n        <EntryField htmlFor=\"name\">\n          User Name\n          <Field id=\"name\" type=\"text\" name=\"name\" />\n        </EntryField>\n        <ErrorMsg name=\"name\" component=\"span\" />\n\n        <EntryField htmlFor=\"email\">\n          Email\n          <Field id=\"email\" type=\"tel\" name=\"email\" />\n        </EntryField>\n        <ErrorMsg name=\"email\" component=\"span\" />\n\n        <EntryField htmlFor=\"password\">\n          Password\n          <Field id=\"password\" type=\"tel\" name=\"password\" />\n        </EntryField>\n        <ErrorMsg name=\"password\" component=\"span\" />\n\n        <Button variant=\"contained\" type=\"submit\">\n          Register\n        </Button>\n      </Form>\n    </Formik>\n  );\n};\n","import { RegisterForm } from 'components/RegisterForm/RegisterForm';\n\nexport default function Register() {\n  return <RegisterForm />;\n}\n"],"names":["EntryField","styled","AddButton","ErrorMsg","ErrorMessage","RegisterForm","dispatch","useDispatch","initialValues","name","email","password","onSubmit","actions","console","log","register","resetForm","htmlFor","id","type","component","Button","variant","Register"],"sourceRoot":""}