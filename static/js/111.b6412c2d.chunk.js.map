{"version":3,"file":"static/js/111.b6412c2d.chunk.js","mappings":"4QAMMA,EAAmBC,EAAAA,GAAW,CAClCC,MAAOD,EAAAA,GACG,oBACPC,MAAM,uBACNC,SAAS,qBACZC,SAAUH,EAAAA,GACA,uBACPI,IAAI,EAAG,qDACPF,SAAS,0BAGDG,EAAY,WACvB,IAAMC,GAAWC,EAAAA,EAAAA,MAQXC,GAASC,EAAAA,EAAAA,IAAU,CACvBC,cAAe,CACbT,MAAO,GACPE,SAAU,IAEZJ,iBAAkBA,EAClBY,SAZuB,SAAC,EAAqBC,GAAa,IAAhCX,EAA+B,EAA/BA,MAAOE,EAAwB,EAAxBA,SACjCG,GAASO,EAAAA,EAAAA,IAAM,CAAEZ,MAAAA,EAAOE,SAAAA,KAExBS,EAAQE,WACT,IAWD,OACE,+BACE,UAACC,EAAA,EAAD,CACEC,UAAU,OACVC,aAAa,MACbC,GAAI,CACFC,GAAI,OACJC,MAAO,MACPC,SAAU,IACV,uBAAwB,CAAEC,GAAI,GAC9B,oCAAqC,CACnCC,MAAO,SAET,sBAAuB,CAAEA,MAAO,SAChC,2BAA4B,CAC1B,WAAY,CAAEA,MAAO,SACrB,aAAc,CAAEC,YAAa,SAC7B,mBAAoB,CAAEA,YAAa,SACnC,yBAA0B,CACxBA,YAAa,UAGjB,wBAAyB,CAAED,MAAO,SAClCE,MAAO,CAAEF,MAAO,UAElBZ,SAAUH,EAAOkB,aAvBnB,WAyBE,SAACC,EAAA,EAAD,CACEC,WAAS,EACTC,GAAG,QACHC,KAAK,QACLL,MAAM,QACNM,MAAOvB,EAAOwB,OAAO/B,MACrBgC,SAAUzB,EAAO0B,aACjBC,OAAQ3B,EAAO4B,WACfC,MAAO7B,EAAO8B,QAAQrC,OAASsC,QAAQ/B,EAAOgC,OAAOvC,OACrDwC,WAAYjC,EAAO8B,QAAQrC,OAASO,EAAOgC,OAAOvC,SAEpD,SAAC0B,EAAA,EAAD,CACEC,WAAS,EACTC,GAAG,WACHC,KAAK,WACLL,MAAM,WACNiB,KAAK,WACLX,MAAOvB,EAAOwB,OAAO7B,SACrB8B,SAAUzB,EAAO0B,aACjBC,OAAQ3B,EAAO4B,WACfC,MAAO7B,EAAO8B,QAAQnC,UAAYoC,QAAQ/B,EAAOgC,OAAOrC,UACxDsC,WAAYjC,EAAO8B,QAAQnC,UAAYK,EAAOgC,OAAOrC,YAEvD,SAACwC,EAAA,EAAD,CAAQpB,MAAM,UAAUqB,QAAQ,YAAYhB,WAAS,EAACc,KAAK,SAA3D,SAAoE,eAM3E,ECzFc,SAASG,IACtB,OAAO,SAACxC,EAAD,GACR,C","sources":["components/LoginForm/LoginForm.jsx","pages/Login.jsx"],"sourcesContent":["import * as yup from 'yup';\nimport { Box, Button, TextField } from '@mui/material';\nimport { useDispatch } from 'react-redux';\nimport { logIn } from 'redux/auth/operations';\nimport { useFormik } from 'formik';\n\nconst validationSchema = yup.object({\n  email: yup\n    .string('Enter your email')\n    .email('Enter a valid email')\n    .required('Email is required'),\n  password: yup\n    .string('Enter your password')\n    .min(8, 'Password should be of minimum 8 characters length')\n    .required('Password is required'),\n});\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmitForm = ({ email, password }, actions) => {\n    dispatch(logIn({ email, password }));\n\n    actions.resetForm();\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      password: '',\n    },\n    validationSchema: validationSchema,\n    onSubmit: handleSubmitForm,\n  });\n\n  return (\n    <>\n      <Box\n        component=\"form\"\n        autoComplete=\"off\"\n        sx={{\n          mx: 'auto',\n          width: '70%',\n          maxWidth: 500,\n          '& .MuiTextField-root': { mb: 2 },\n          '& .MuiInputLabel-root.Mui-focused': {\n            color: 'white',\n          },\n          '& label.Mui-focused': { color: 'white' },\n          '& .MuiOutlinedInput-root': {\n            '& .input': { color: 'white' },\n            '& fieldset': { borderColor: 'white' },\n            '&:hover fieldset': { borderColor: 'white' },\n            '&.Mui-focused fieldset': {\n              borderColor: 'white',\n            },\n          },\n          '& .MuiInputBase-input': { color: 'white' },\n          label: { color: 'white' },\n        }}\n        onSubmit={formik.handleSubmit}\n      >\n        <TextField\n          fullWidth\n          id=\"email\"\n          name=\"email\"\n          label=\"Email\"\n          value={formik.values.email}\n          onChange={formik.handleChange}\n          onBlur={formik.handleBlur}\n          error={formik.touched.email && Boolean(formik.errors.email)}\n          helperText={formik.touched.email && formik.errors.email}\n        />\n        <TextField\n          fullWidth\n          id=\"password\"\n          name=\"password\"\n          label=\"Password\"\n          type=\"password\"\n          value={formik.values.password}\n          onChange={formik.handleChange}\n          onBlur={formik.handleBlur}\n          error={formik.touched.password && Boolean(formik.errors.password)}\n          helperText={formik.touched.password && formik.errors.password}\n        />\n        <Button color=\"primary\" variant=\"contained\" fullWidth type=\"submit\">\n          Submit\n        </Button>\n      </Box>\n    </>\n  );\n};\n","import { LoginForm } from 'components/LoginForm/LoginForm';\n\nexport default function Login() {\n  return <LoginForm />;\n}\n"],"names":["validationSchema","yup","email","required","password","min","LoginForm","dispatch","useDispatch","formik","useFormik","initialValues","onSubmit","actions","logIn","resetForm","Box","component","autoComplete","sx","mx","width","maxWidth","mb","color","borderColor","label","handleSubmit","TextField","fullWidth","id","name","value","values","onChange","handleChange","onBlur","handleBlur","error","touched","Boolean","errors","helperText","type","Button","variant","Login"],"sourceRoot":""}